# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/pilus_project',
                'doc_host': 'https://galopyz.github.io',
                'git_url': 'https://github.com/galopyz/pilus_project',
                'lib_path': 'pilus_project'},
  'syms': { 'pilus_project.core': { 'pilus_project.core.apply_clahe': ('core.html#apply_clahe', 'pilus_project/core.py'),
                                    'pilus_project.core.calc_corners': ('core.html#calc_corners', 'pilus_project/core.py'),
                                    'pilus_project.core.compare_ims': ('core.html#compare_ims', 'pilus_project/core.py'),
                                    'pilus_project.core.compare_ims_with_boxes': ( 'core.html#compare_ims_with_boxes',
                                                                                   'pilus_project/core.py'),
                                    'pilus_project.core.imshow_with_boxes': ('core.html#imshow_with_boxes', 'pilus_project/core.py'),
                                    'pilus_project.core.show_im': ('core.html#show_im', 'pilus_project/core.py')},
            'pilus_project.darknet': { 'pilus_project.darknet.ConvBlock': ('darknet.html#convblock', 'pilus_project/darknet.py'),
                                       'pilus_project.darknet.ConvBlock.__init__': ( 'darknet.html#convblock.__init__',
                                                                                     'pilus_project/darknet.py'),
                                       'pilus_project.darknet.ConvBlock.forward': ( 'darknet.html#convblock.forward',
                                                                                    'pilus_project/darknet.py'),
                                       'pilus_project.darknet.get_darknet19': ('darknet.html#get_darknet19', 'pilus_project/darknet.py'),
                                       'pilus_project.darknet.get_simple_model': ( 'darknet.html#get_simple_model',
                                                                                   'pilus_project/darknet.py')},
            'pilus_project.microai': { 'pilus_project.microai.foo': ('microai.html#foo', 'pilus_project/microai.py'),
                                       'pilus_project.microai.say_hello': ('microai.html#say_hello', 'pilus_project/microai.py')},
            'pilus_project.pascal': { 'pilus_project.pascal._rvs_onehot_tfm': ('pascal.html#_rvs_onehot_tfm', 'pilus_project/pascal.py'),
                                      'pilus_project.pascal.calculate_dataset_stats': ( 'pascal.html#calculate_dataset_stats',
                                                                                        'pilus_project/pascal.py'),
                                      'pilus_project.pascal.create_voc_datasets': ( 'pascal.html#create_voc_datasets',
                                                                                    'pilus_project/pascal.py'),
                                      'pilus_project.pascal.denorm': ('pascal.html#denorm', 'pilus_project/pascal.py'),
                                      'pilus_project.pascal.get_class_distribution': ( 'pascal.html#get_class_distribution',
                                                                                       'pilus_project/pascal.py'),
                                      'pilus_project.pascal.get_classification_model': ( 'pascal.html#get_classification_model',
                                                                                         'pilus_project/pascal.py'),
                                      'pilus_project.pascal.get_image_sizes': ('pascal.html#get_image_sizes', 'pilus_project/pascal.py'),
                                      'pilus_project.pascal.get_stats_dataloader': ( 'pascal.html#get_stats_dataloader',
                                                                                     'pilus_project/pascal.py'),
                                      'pilus_project.pascal.onehot_tfm': ('pascal.html#onehot_tfm', 'pilus_project/pascal.py'),
                                      'pilus_project.pascal.show_class_examples': ( 'pascal.html#show_class_examples',
                                                                                    'pilus_project/pascal.py'),
                                      'pilus_project.pascal.show_image_batch': ('pascal.html#show_image_batch', 'pilus_project/pascal.py'),
                                      'pilus_project.pascal.show_voc_sample': ('pascal.html#show_voc_sample', 'pilus_project/pascal.py'),
                                      'pilus_project.pascal.voc_extract': ('pascal.html#voc_extract', 'pilus_project/pascal.py')},
            'pilus_project.pascal_class': { 'pilus_project.pascal_class._rvs_onehot_tfm': ( 'pascal.html#_rvs_onehot_tfm',
                                                                                            'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.calculate_dataset_stats': ( 'pascal.html#calculate_dataset_stats',
                                                                                                    'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.create_voc_datasets': ( 'pascal.html#create_voc_datasets',
                                                                                                'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.denorm': ('pascal.html#denorm', 'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.get_class_distribution': ( 'pascal.html#get_class_distribution',
                                                                                                   'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.get_classification_model': ( 'pascal.html#get_classification_model',
                                                                                                     'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.get_image_sizes': ( 'pascal.html#get_image_sizes',
                                                                                            'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.get_stats_dataloader': ( 'pascal.html#get_stats_dataloader',
                                                                                                 'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.onehot_tfm': ( 'pascal.html#onehot_tfm',
                                                                                       'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.show_class_examples': ( 'pascal.html#show_class_examples',
                                                                                                'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.show_voc_sample': ( 'pascal.html#show_voc_sample',
                                                                                            'pilus_project/pascal_class.py'),
                                            'pilus_project.pascal_class.voc_extract': ( 'pascal.html#voc_extract',
                                                                                        'pilus_project/pascal_class.py')},
            'pilus_project.yolov1': { 'pilus_project.yolov1.CNNBlock': ('yolov1.html#cnnblock', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.CNNBlock.__init__': ( 'yolov1.html#cnnblock.__init__',
                                                                                  'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.CNNBlock.forward': ('yolov1.html#cnnblock.forward', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Compose': ('yolov1.html#compose', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Compose.__call__': ('yolov1.html#compose.__call__', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Compose.__init__': ('yolov1.html#compose.__init__', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.VOCDataset': ('yolov1.html#vocdataset', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.VOCDataset.__getitem__': ( 'yolov1.html#vocdataset.__getitem__',
                                                                                       'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.VOCDataset.__init__': ( 'yolov1.html#vocdataset.__init__',
                                                                                    'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.VOCDataset.__len__': ( 'yolov1.html#vocdataset.__len__',
                                                                                   'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.YoloLoss': ('yolov1.html#yololoss', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.YoloLoss.__init__': ( 'yolov1.html#yololoss.__init__',
                                                                                  'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.YoloLoss.forward': ('yolov1.html#yololoss.forward', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Yolov1': ('yolov1.html#yolov1', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Yolov1.__init__': ('yolov1.html#yolov1.__init__', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Yolov1._create_conv_layers': ( 'yolov1.html#yolov1._create_conv_layers',
                                                                                           'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Yolov1._create_fcs': ( 'yolov1.html#yolov1._create_fcs',
                                                                                   'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.Yolov1.forward': ('yolov1.html#yolov1.forward', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.cellboxes_to_boxes': ( 'yolov1.html#cellboxes_to_boxes',
                                                                                   'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.convert_cellboxes': ( 'yolov1.html#convert_cellboxes',
                                                                                  'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.get_bboxes': ('yolov1.html#get_bboxes', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.intersection_over_union': ( 'yolov1.html#intersection_over_union',
                                                                                        'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.load_checkpoint': ('yolov1.html#load_checkpoint', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.mean_average_precision': ( 'yolov1.html#mean_average_precision',
                                                                                       'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.non_max_suppression': ( 'yolov1.html#non_max_suppression',
                                                                                    'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.plot_image': ('yolov1.html#plot_image', 'pilus_project/yolov1.py'),
                                      'pilus_project.yolov1.save_checkpoint': ('yolov1.html#save_checkpoint', 'pilus_project/yolov1.py')}}}
